name: Publish to npm

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Update npm
        run: npm install -g npm@latest

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Remove refs/tags/ prefix
            VERSION=${GITHUB_REF#refs/tags/}
            # Remove v prefix if it exists
            VERSION=${VERSION#v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            VERSION=$(jq -r '.version' package.json)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Update package.json version
        run: |
          npm pkg set version=${{ steps.get_version.outputs.version }}
          npm install --package-lock-only

      - name: Commit version update
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git diff --staged --quiet || git commit -m "chore: update version to ${{ steps.get_version.outputs.version }} [skip ci]"
          git push origin HEAD:main

      - name: Run unit tests
        run: npm run test:unit

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

